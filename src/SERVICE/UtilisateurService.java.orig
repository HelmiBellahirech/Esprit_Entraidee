/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SERVICE;

import DataSource.DataSource;
import ISERVICE.IutilisateurService;
import MODEL.Etudiant;
import MODEL.Professeur;
import MODEL.Responsable;
import MODEL.Utilisateur;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author OrbitG
 */
public class UtilisateurService implements IutilisateurService {

    private Connection connection;
    private PreparedStatement ps;
    private PreparedStatement ps1;

    public UtilisateurService() {
        connection = DataSource.getInstance().getConnection();
    }

    @Override
    public boolean add(Utilisateur t) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
=======
    public void add(Utilisateur t) {
        if (t instanceof Etudiant) {
            Etudiant e = (Etudiant) t;
            String req = "insert into Utilisateur (Email,Username,Password,Nom,Prenom,Telephone,Photo,Sexe,Date_Creation,Role,Classe) values (?,?,?,?,?,?,?,?,?,?,?)";

            PreparedStatement preparedStatement;

//Tu fais tes traitement sur date_util...
//Tu castes à la fin pour insérer en base.
            java.util.Date date_util = new java.util.Date();
            java.sql.Date date_sql = new java.sql.Date(date_util.getTime());
            try {
                preparedStatement = connection.prepareStatement(req);

                // 
                preparedStatement.setString(1, e.getEmail());
                preparedStatement.setString(2, e.getUsername());
                preparedStatement.setString(3, e.getPassword());
                preparedStatement.setString(4, e.getNom());
                preparedStatement.setString(5, e.getPrenom());
                preparedStatement.setString(6, e.getTelephone());
                preparedStatement.setString(7, e.getPhoto());
                preparedStatement.setString(8, e.getSexe());
                preparedStatement.setDate(9, date_sql);
                preparedStatement.setString(10, "Etudiant");
                preparedStatement.setString(11, e.getClasse());

                preparedStatement.executeUpdate();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else if (t instanceof Professeur) {
            Professeur P = (Professeur) t;
            String req = "insert into Utilisateur (Email,Username,Password,Nom,Prenom,Telephone,Photo,Sexe,Date_Creation,Role,Specialite) values (?,?,?,?,?,?,?,?,?,?,?)";

            PreparedStatement preparedStatement;

//Tu fais tes traitement sur date_util...
//Tu castes à la fin pour insérer en base.
            java.util.Date date_util = new java.util.Date();
            java.sql.Date date_sql = new java.sql.Date(date_util.getTime());
            try {
                preparedStatement = connection.prepareStatement(req);

                // 
                preparedStatement.setString(1, P.getEmail());
                preparedStatement.setString(2, P.getUsername());
                preparedStatement.setString(3, P.getPassword());
                preparedStatement.setString(4, P.getNom());
                preparedStatement.setString(5, P.getPrenom());
                preparedStatement.setString(6, P.getTelephone());
                preparedStatement.setString(7, P.getPhoto());
                preparedStatement.setString(8, P.getSexe());
                preparedStatement.setDate(9, date_sql);
                preparedStatement.setString(10, "Professeur");
                preparedStatement.setString(11, P.getSpecialite());

                preparedStatement.executeUpdate();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else if (t instanceof Responsable) {
            Responsable r = (Responsable) t;
            String req = "insert into Utilisateur (Email,Username,Password,Nom,Prenom,Telephone,Photo,Sexe,Date_Creation,Role,Nom_Club,Photo_Club) values (?,?,?,?,?,?,?,?,?,?,?,?)";

            PreparedStatement preparedStatement;

//Tu fais tes traitement sur date_util...
//Tu castes à la fin pour insérer en base.
            java.util.Date date_util = new java.util.Date();
            java.sql.Date date_sql = new java.sql.Date(date_util.getTime());
            try {
                preparedStatement = connection.prepareStatement(req);

                // 
                preparedStatement.setString(1, r.getEmail());
                preparedStatement.setString(2, r.getUsername());
                preparedStatement.setString(3, r.getPassword());
















/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SERVICE;

import DataSource.DataSource;
import ISERVICE.IutilisateurService;
import MODEL.Etudiant;
import MODEL.Professeur;
import MODEL.Responsable;
import MODEL.Utilisateur;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author OrbitG
 */
public class UtilisateurService implements IutilisateurService {

    private Connection connection;
    private PreparedStatement ps;
    private PreparedStatement ps1;

    public UtilisateurService() {
        connection = DataSource.getInstance().getConnection();
    }

    @Override
